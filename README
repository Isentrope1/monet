
Monet is Copyright (c) 2017 Isentropy LLC
and licensed under a modifed MIT license. See LICENSE file. 

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

https://github.com/isentropy/monet

https://isentropy.com
----------------------------------------------------------------------

Monet is an open source java command line Ethereum wallet tool that manages ETH and ERC20 tokens. Monet has a simple interface and allows you to:

* send and receive ETH and ERC20 tokens: 
>> token add OMG 0xd26114cd6EE289AccF82350c8d8487fedB8A0C07 18
>> contact add MrMonet 0x978097f6628b66b22df8b8d39284743c58e1542f
>> send MrMonet 1.23 OMG
>> send MrMonet 2 ETH
You choose sending wallet in following steps. Popular ERC20 token definitions (eg OMG) are included.

* check wallet positions values in USD using token price information from coinmarketcap.com
>> wallet

* create wallets
>> wallet make MyNewWallet

* easily MAKE YOUR OWN ERC20 token: 
>> token make <symbol> <quantity>
Tokens created this way use HumanStandardToken.sol as solidity contract. When creation is completed, created token will be added to your token list. You can then transfer it to others.



Build:
mvn clean package
monet-0.1.jar will be in target dir

Running:
Monet requires geth or 'parity --geth' to be running. 
It can interact via ipc file (~/.ethereum/geth.ipc on linux) or rpc URL (default http://localhost:8545). See --rpc option to specify connector.

Monet stores Ethereum wallet keys in <datadir>/keys. Copy the Ethereum wallet keys you wish to use there. You can also make wallets from within Monet using 'wallet make <name>' command.

java -jar monet-0.1.jar
--datadir <dir>: dir to store config and wallets [default ~/.monet]
--rpc <RPC URL or ipc file path>: IPC or RPC of geth


Commands:
balance [wallet]: print total or wallet balance info
contact: list contacts
contact add <name> <address>: add new contact address
refresh [config|prices]: refresh config or rates from coinmarketcap.com
send <address or contact> <amount> <currency>: send ETH or ERC20 token. 
	Choose sending wallet from menu.
token: token info
token add <name> <address> [<decimals>]: define existing ERC20 token to watch
token make <token_name> <total_amount>: create a new ERC20 token and push contract
	to blockchain. Choose recipient wallet from menu.
wallet: wallet balance info
wallet make <name>: make a new wallet
?: help

Commands may be abbreviated. For example: b = balance, w m = wallet make. 


Token Ecosystem
The official ERC20 token of Monet is the Monet, located at 0x5648549517cbedcb366898aedd55f4e032dc9c33.
Its address is hard-coded into Monet, along with other popular ERC20 tokens. There is a fixed quantity of 1000000 Monets in circulation. If you would like some Monet, send me some tokens and/or email:

Count de Monet (0x978097f6628b66b22df8b8d39284743c58e1542f)
countdemonet@isentropy.com
